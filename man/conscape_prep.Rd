% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/conscape_prep.R
\name{conscape_prep}
\alias{conscape_prep}
\title{Wrapper function to prepare data for \code{run_conscape}}
\usage{
conscape_prep(
  tile_d,
  tile_trim,
  asc_dir = NULL,
  r_target,
  r_mov,
  r_src,
  target_threshold = 0,
  clear_dir = FALSE,
  landmark = 10L
)
}
\arguments{
\item{tile_d}{Dimensions (in meters) of tiles}

\item{tile_trim}{The amount of border to be trimmed from tiles after running ConScape (meters)}

\item{asc_dir}{Directory where .asc files of tiles will be written to. If NULL (Default), then files will be written to the temporary directory of the R session}

\item{r_target}{\code{SpatRaster} representing target qualities. May be the same as \code{r_src}}

\item{r_mov}{\code{SpatRaster} representing movement probabilities}

\item{r_src}{\code{SpatRaster} representing source qualities. May be the same as \code{r_target}}

\item{target_threshold}{Value of r_target that is meaningful for movement (Default = 0). Values less \code{target_threshold} will be set to NA and masked.}

\item{clear_dir}{Logical (Default = FALSE). Should existing files in the \code{asc_dir} be overwritten? This function must have an empty \code{asc_dir} to proceed}

\item{landmark}{The landmark value used for 'coarse_graining' with ConScape (Default = 10L). Used to determine which landscape tiles have data to be processed with ConScape}
}
\value{
A named list of class \code{ConScapeRtools_prep} containing the \code{SpatVector}tiles created, the numeric identifier of tiles with usable data for ConScape, the path to the directories where .asc tiles were written, the \code{tile_trim} value, and the \code{landmark} value specified.
}
\description{
This function will run the \code{make_tiles} and \code{tile_rast} functions to break large raster into tiles of specified dimensions. This is a convenience wrapper to process all layers in one function call.
}
\details{
The smaller the tiles created, the faster each can be processed. The width of the \code{tile_trim} parameter will depend upon the movement settings of your ConScape run. If there are obvious tiling edges and artifacts in your final surfaces, then \code{tile_trim} and potentially \code{tile_d} need to be increased.
}
\examples{
library(ConScapeRtools)

## Import data
s <- system.file("data/suitability.asc", package = "ConScapeRtools")
source <- terra::rast(s)

a <- system.file("data/affinity.asc", package = "ConScapeRtools")
resist <- terra::rast(a)

jl_home <- "C:/Users/peterman.73/AppData/Local/Programs/Julia-1.10.5/bin/"

td <- tile_design(r_mov = resist,
                  r_target = source,
                  max_d = 7000,
                  theta = 0.1,
                  jl_home = jl_home)

## Tile dimension
tile_d <- td$tile_d

# How much to trim tiles
tile_trim <- td$tile_trim

# Makes computation more efficient
landmark <- 5L # Must be an integer, not numeric

# Controls level of randomness of paths
theta <- td$theta

# Controls rate of decay with distance
exp_d <- td$exp_d

## Prepare data for analysis
prep <- conscape_prep(tile_d = tile_d,
                      tile_trim = tile_trim,
                      r_target = source,
                      r_mov = resist,
                      r_src = source,
                      clear_dir = T,
                      landmark = landmark)
}
\seealso{
\code{\link[=tile_design]{tile_design()}}, \code{\link[=tile_rast]{tile_rast()}} and \code{\link[=make_tiles]{make_tiles()}}
}
\author{
Bill Peterman
}
