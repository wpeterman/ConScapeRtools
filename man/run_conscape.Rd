% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_conscape.R
\name{run_conscape}
\alias{run_conscape}
\title{Run ConScape}
\usage{
run_conscape(
  conscape_prep = NULL,
  out_dir,
  hab_target = NULL,
  hab_src = NULL,
  mov_prob = NULL,
  clear_dir = TRUE,
  landmark = 10L,
  theta = 0.01,
  exp_d = 150,
  NA_val = 1e-50,
  mosaic = TRUE,
  jl_home,
  parallel = FALSE,
  workers = 1,
  distributed = FALSE,
  progress = TRUE,
  parallel_R = FALSE
)
}
\arguments{
\item{conscape_prep}{Object of class \code{ConScapeRtools_prep} created using the \code{conscape_prep} function. If NULL (Default), then \code{hab_target}, \code{hab_src}, and \code{mov_prob} must individually be specified.}

\item{out_dir}{Directory where final ConScape outputs will be written}

\item{hab_target}{Directory with habitat target tiles. Alternatively, a \code{SpatRaster}.}

\item{hab_src}{Directory with habitat source tiles. Alternatively, a \code{SpatRaster}.}

\item{mov_prob}{Directory with movement probability tiles. Alternatively, a \code{SpatRaster}.}

\item{clear_dir}{Should existing files in the \code{asc_dir} be overwritten? This function must have an empty \code{asc_dir} to proceed}

\item{landmark}{The landmark value used for 'coarse_graining' with ConScape (Default = 10L). Used to determine which landscape tiles have data to be processed with ConScape}

\item{theta}{Parameter to control the amount of randomness in the paths. As theta approaches 0 movement is random, whereas theta approaching infinity is optimal movement. (Default = 0.01)}

\item{exp_d}{Numerator of the exponential decay function used with the distance transformation of the movement grid (Default = 50)}

\item{NA_val}{Value to assign to NA cells to ensure ConScape can run (Default = 1e-50)}

\item{mosaic}{Logical. Default = TRUE. The tiles from the ConScape run will be combined into a single raster.}

\item{jl_home}{Path to the \code{bin} directory where Julia is installed}

\item{parallel}{Logical. If FALSE, processing will not be done in parallel.}

\item{workers}{If \code{parallel = TRUE}, provide the number of parallel workers to create. Default = 2}

\item{distributed}{Logical. If \code{parallel = TRUE}, you can choose parallelize using Julia distributed processing (\code{TRUE}) or threading (\code{FALSE})}

\item{progress}{Logical. If \code{TRUE}, progress of processing will be reported.}

\item{parallel_R}{Logical. If \code{TRUE}, parallel processign will be done from R.}
}
\value{
A named list with the betweenness and functional connectivity rasters as well as the directories where output tiles were written.
}
\description{
This function runs ConScape (optionally in parallel) over all created landscape tiles
}
\details{
In most instances, it will be easiest to prepare data for analysis using the \code{conscape_prep} function. Provide the object created from \code{conscape_prep} to the \code{conscape_prep} parameter of \code{run_conscape}. Doing this eliminates the need to manually specify \code{landmark}, \code{hab_target}, \code{hab_src}, or \code{mov_prob}.

If \code{parallel = TRUE} and \code{progress = TRUE}, progress updates will be reported, but may be inconsistent.
}
\examples{
library(ConScapeRtools)

## Import data
s <- system.file("extdata", "suitability.asc", package = "ConScapeRtools")
source <- terra::rast(s)

a <- system.file("extdata", "affinity.asc", package = "ConScapeRtools")
resist <- terra::rast(a)

jl_home <- "C:/Users/peterman.73/AppData/Local/Programs/Julia-1.10.5/bin/"

td <- tile_design(r_mov = resist,
                  r_target = source,
                  max_d = 10000,
                  theta = 0.1,
                  jl_home = jl_home)

## Tile dimension
tile_d <- td$tile_d

# How much to trim tiles
tile_trim <- td$tile_trim

# Makes computation more efficient
landmark <- 5L # Must be an integer, not numeric

# Controls level of randomness of paths
theta <- td$theta

# Controls rate of decay with distance
exp_d <- td$exp_d

## Prepare data for analysis
prep <- conscape_prep(tile_d = tile_d,
                      tile_trim = tile_trim,
                      r_target = source,
                      r_mov = resist,
                      r_src = source,
                      clear_dir = T,
                      landmark = landmark)

## Run ConScape
## No parallelization
cs_run.serial <- run_conscape(out_dir = file.path(prep$asc_dir,"results"),
                              conscape_prep = prep,
                              theta = theta,
                              exp_d = exp_d,
                              jl_home = jl_home,
                              parallel = F)

## Parallel within R
cs_run.r <- run_conscape(out_dir = file.path(prep$asc_dir,"results"),
                         conscape_prep = prep,
                         theta = theta,
                         exp_d = exp_d,
                         jl_home = jl_home,
                         parallel = T,
                         workers = 4,
                         parallel_R = TRUE)
## Threaded parallel
cs_run.thread <- run_conscape(out_dir = file.path(prep$asc_dir,"results"),
                              conscape_prep = prep,
                              theta = theta,
                              exp_d = exp_d,
                              jl_home = jl_home,
                              parallel = T,
                              workers = 4)

## Threaded parallel
cs_run.dist <- run_conscape(out_dir = file.path(prep$asc_dir,"results"),
                            conscape_prep = prep,
                            theta = theta,
                            exp_d = exp_d,
                            jl_home = jl_home,
                            parallel = T,
                            workers = 4,
                            distributed = TRUE)
plot(cs_run.dist)

## No tiling --> Only attempt with small to moderate sized rasters!
cs_run <- run_conscape(out_dir = file.path(prep$asc_dir,"results"),
                       hab_target = source,
                       hab_src = source,
                       mov_prob = resist,
                       theta = theta,
                       exp_d = exp_d,
                       jl_home = jl_home)

}
\author{
Bill Peterman
}
