% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_conscape.R
\name{run_conscape}
\alias{run_conscape}
\title{Run ConScape}
\usage{
run_conscape(
  conscape_prep = NULL,
  out_dir,
  hab_target = NULL,
  hab_src = NULL,
  mov_prob = NULL,
  landmark = 10L,
  theta = 0.01,
  exp_d = 150,
  jl_home,
  parallel = FALSE,
  workers = availableCores()/2,
  end_multisession = FALSE
)
}
\arguments{
\item{conscape_prep}{Object of class `ConScapeRtools_prep` created using the `conscape_prep` function. If NULL (Default), then `hab_target`, `hab_src`, and `mov_prob` must individually be specified.}

\item{out_dir}{Directory where final ConScape outputs will be written}

\item{hab_target}{Directory with habitat target tiles}

\item{hab_src}{Directory with habitat source tiles}

\item{mov_prob}{Directory with movement probability tiles}

\item{landmark}{The landmark value used for 'coarse_graining' with ConScape (Default = 10L). Used to determine which landscape tiles have data to be processed with ConScape}

\item{theta}{Parameter to control the amount of randomness in the paths. As theta approaches 0 movement is random, whereas theta approaching infinity is optimal movement. (Default = 0.01)}

\item{exp_d}{Numerator of the exponential decay function used with the distance transformation of the movement grid (Default = 150)}

\item{jl_home}{Path to the `bin` directory where Julia is installed}

\item{parallel}{Logical. If FALSE, processing will not be done in parallel.}

\item{workers}{If `parallel = TRUE`, provide the number of parallel workers to create. Default 0.5*Number of available cores}

\item{end_multisession}{Logical. Default == FALSE}

\item{clear_dir}{Should existing files in the `asc_dir` be overwritten? This function must have an empty `asc_dir` to proceed}
}
\value{
A named list with the directories where betweenness and functional connectivity outputs were written
}
\description{
This function runs ConScape (optionally in parallel) over all created landscape tiles
}
\details{
In most instances, it will be easiest to prepare data for analysis using the `conscape_prep` function. Provide the object created from `conscape_prep` to the `conscape_prep` parameter of `run_conscape`. Doing this eliminates the need to manually specify `has_target`, `hab_src`, or `mov_prob`.
}
\examples{
library(ConScapeRtools)

## Import data
s <- system.file("data/suitability.asc", package = "ConScapeRtools")
source <- terra::rast(s)

a <- system.file("data/affinity.asc", package = "ConScapeRtools")
resist <- terra::rast(a)

jl_home <- "C:/Users/peterman.73/AppData/Local/Programs/Julia-1.10.5/bin/"

td <- tile_design(r_mov = resist,
                  r_target = source,
                  max_d = 7000,
                  theta = 0.1,
                  jl_home = jl_home)

## Tile dimension
tile_d <- td$tile_d

# How much to trim tiles
tile_trim <- td$tile_trim

# Makes computation more efficient
landmark <- 5L # Must be an integer, not numeric

# Controls level of randomness of paths
theta <- td$theta

# Controls rate of decay with distance
exp_d <- td$exp_d

## Prepare data for analysis
prep <- conscape_prep(tile_d = tile_d,
                      tile_trim = tile_trim,
                      r_target = source,
                      r_mov = resist,
                      r_src = source,
                      clear_dir = T,
                      landmark = landmark)

## Run ConScape
cs_run <- run_conscape(out_dir = file.path(prep$asc_dir,"results"),
                       conscape_prep = prep,
                       theta = theta,
                       exp_d = exp_d,
                       jl_home = jl_home,
                       parallel = T,
                       workers = 6,
                       end_multisession = T)
}
\author{
Bill Peterman
}
