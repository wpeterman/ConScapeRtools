% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_tiles.R
\name{make_tiles}
\alias{make_tiles}
\title{Break raster into small tiles}
\usage{
make_tiles(
  tile_d,
  tile_trim,
  asc_dir = NULL,
  r,
  clear_dir = FALSE,
  landmark = 10L
)
}
\arguments{
\item{tile_d}{Dimensions (in meters) of tiles}

\item{tile_trim}{The amount of border to be trimmed from tiles after running ConScape (meters)}

\item{asc_dir}{Directory where .asc files of tiles will be written to. If NULL (Default), then files will be written to the temporary directory of the R session}

\item{r}{Raster file as \code{SpatRaster} to be broken up into smaller tiles}

\item{clear_dir}{Should existing files in the \code{asc_dir} be overwritten? This function must have an empty \code{asc_dir} to proceed}

\item{landmark}{The landmark value used for 'coarse_graining' with ConScape (Default = 10L). Used to determine which landscape tiles have data to be processed with ConScape}
}
\value{
A named list containing the \code{SpatVector}tiles created, the numeric identifier of tiles with usable data for ConScape, the path to the directory where .asc tiles were written, and the \code{tile_trim} value specified.
}
\description{
This function will break a large raster into tiles of specified dimensions.
}
\details{
The smaller the tiles created, the faster each can be processed. The width of the \code{tile_trim} parameter will depend upon the movement settings of your ConScape run. If there are obvious tiling edges and artifacts in your final surfaces, then \code{tile_trim} needs to be increased.
}
\examples{
library(ConScapeRtools)

## Import data
s <- system.file("data/suitability.asc", package = "ConScapeRtools")
source <- terra::rast(s)

a <- system.file("data/affinity.asc", package = "ConScapeRtools")
resist <- terra::rast(a)

jl_home <- "C:/Users/peterman.73/AppData/Local/Programs/Julia-1.10.5/bin/"

## Run tile design to get parameters
td <- tile_design(r_mov = resist,
                  r_target = source,
                  max_d = 7000,
                  theta = 0.1,
                  jl_home = jl_home)

target_tile <- make_tiles(tile_d = td$tile_d,
                          tile_trim = td$tile_trim,
                          r = source,
                          clear_dir = T)
}
\seealso{
\code{\link[=tile_rast]{tile_rast()}} for subsequent making of tiles
}
\author{
Bill Peterman
}
